/**
 * SendinBlue API
 * SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  | 
 *
 * OpenAPI spec version: 3.0.0
 * Contact: contact@sendinblue.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse20022', 'model/InlineResponse20023', 'model/InlineResponse20024', 'model/InlineResponse2015', 'model/InlineResponse403', 'model/SendTransacSms1'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InlineResponse20022'), require('../model/InlineResponse20023'), require('../model/InlineResponse20024'), require('../model/InlineResponse2015'), require('../model/InlineResponse403'), require('../model/SendTransacSms1'));
  } else {
    // Browser globals (root is window)
    if (!root.SendinBlueApi) {
      root.SendinBlueApi = {};
    }
    root.SendinBlueApi.TransactionalSMSApi = factory(root.SendinBlueApi.ApiClient, root.SendinBlueApi.InlineResponse20022, root.SendinBlueApi.InlineResponse20023, root.SendinBlueApi.InlineResponse20024, root.SendinBlueApi.InlineResponse2015, root.SendinBlueApi.InlineResponse403, root.SendinBlueApi.SendTransacSms1);
  }
}(this, function(ApiClient, InlineResponse20022, InlineResponse20023, InlineResponse20024, InlineResponse2015, InlineResponse403, SendTransacSms1) {
  'use strict';

  /**
   * TransactionalSMS service.
   * @module api/TransactionalSMSApi
   * @version 3.0.0
   */

  /**
   * Constructs a new TransactionalSMSApi. 
   * @alias module:api/TransactionalSMSApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getSmsEvents operation.
     * @callback module:api/TransactionalSMSApi~getSmsEventsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20022} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the SMS activity (unaggregated events)
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Number of documents per page (default to 50)
     * @param {Date} opts.startDate Mandatory if endDate is used. Starting date (YYYY-MM-DD) of the report
     * @param {Date} opts.endDate Mandatory if startDate is used. Ending date (YYYY-MM-DD) of the report
     * @param {Number} opts.offset Index of the first document of the page (default to 0)
     * @param {Number} opts.days Number of days in the past including today (positive integer). Not compatible with &#39;startDate&#39; and &#39;endDate&#39;
     * @param {String} opts.phoneNumber Filter the report for a specific phone number
     * @param {module:model/String} opts.event Filter the report for specific events
     * @param {String} opts.tags Filter the report for specific tags passed as a serialized urlencoded array
     * @param {module:api/TransactionalSMSApi~getSmsEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20022}
     */
    this.getSmsEvents = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'limit': opts['limit'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'offset': opts['offset'],
        'days': opts['days'],
        'phoneNumber': opts['phoneNumber'],
        'event': opts['event'],
        'tags': opts['tags']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse20022;

      return this.apiClient.callApi(
        '/transactionalSMS/statistics/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getTransacAggregatedSmsReport operation.
     * @callback module:api/TransactionalSMSApi~getTransacAggregatedSmsReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20023} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get your SMS activity aggregated over a period of time
     * @param {Object} opts Optional parameters
     * @param {Date} opts.startDate Mandatory if endDate is used. Starting date (YYYY-MM-DD) of the report
     * @param {Date} opts.endDate Mandatory if startDate is used. Ending date (YYYY-MM-DD) of the report
     * @param {Number} opts.days Number of days in the past including today (positive integer). Not compatible with startDate and endDate
     * @param {String} opts.tag Filter on a tag
     * @param {module:api/TransactionalSMSApi~getTransacAggregatedSmsReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20023}
     */
    this.getTransacAggregatedSmsReport = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'days': opts['days'],
        'tag': opts['tag']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse20023;

      return this.apiClient.callApi(
        '/transactionalSMS/statistics/aggregatedReport', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getTransacSmsReport operation.
     * @callback module:api/TransactionalSMSApi~getTransacSmsReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20024} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get your SMS activity aggregated per day
     * @param {Object} opts Optional parameters
     * @param {Date} opts.startDate Mandatory if endDate is used. Starting date (YYYY-MM-DD) of the report
     * @param {Date} opts.endDate Mandatory if startDate is used. Ending date (YYYY-MM-DD) of the report
     * @param {Number} opts.days Number of days in the past including today (positive integer). Not compatible with &#39;startDate&#39; and &#39;endDate&#39;
     * @param {String} opts.tag Filter on a tag
     * @param {module:api/TransactionalSMSApi~getTransacSmsReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20024}
     */
    this.getTransacSmsReport = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'days': opts['days'],
        'tag': opts['tag']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse20024;

      return this.apiClient.callApi(
        '/transactionalSMS/statistics/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the sendTransacSms operation.
     * @callback module:api/TransactionalSMSApi~sendTransacSmsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2015} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send the SMS campaign to the specified mobile number
     * @param {module:model/SendTransacSms1} sendTransacSms Values to send a transactional SMS
     * @param {module:api/TransactionalSMSApi~sendTransacSmsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2015}
     */
    this.sendTransacSms = function(sendTransacSms, callback) {
      var postBody = sendTransacSms;

      // verify the required parameter 'sendTransacSms' is set
      if (sendTransacSms === undefined || sendTransacSms === null) {
        throw new Error("Missing the required parameter 'sendTransacSms' when calling sendTransacSms");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api-key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse2015;

      return this.apiClient.callApi(
        '/transactionalSMS/sms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
